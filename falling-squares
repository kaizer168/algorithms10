class Solution {
public:
    vector<int> fallingSquares(vector<vector<int>>& positions) {
        int n = positions.size();
        vector<int> ans(n,0);
        vector<int> pHeight(n,0);

        for (int i = 0; i < n; i++) {
            int left = positions[i][0];
            int right = left + positions[i][1];
            pHeight[i] += positions[i][1];
            for (int j = i + 1; j < n; j++) {
                if (left < positions[j][1] + positions[j][0] && right > positions[j][0]) {
                    pHeight[j] = max(pHeight[j], pHeight[i]);
                }
            }
        }

        int maxHeight = 0;
        for (int i = 0; i < n; i++) {
            maxHeight = max(maxHeight, pHeight[i]);
            ans[i] = maxHeight;
        }
        return ans;        
    }
};
